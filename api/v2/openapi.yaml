openapi: 3.1.0

info:
  title: People Service
  version: 0.0.1

paths:
  "/person/{id}":
    get:
      summary: "Retrieve a single person record"
      description: "Retrieve a single person record"
      operationId: "getPerson"
      parameters:
        - name: id
          in: path
          required: true
          description: "person identifier"
          schema:
            type: string
      responses:
        "200":
          description: "Retrieve single person record successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
        default:
          $ref: "#/components/responses/Error"

  "/person":
    get:
      summary: "Get all person records"
      description: "Get all person records"
      operationId: "getPeople"
      parameters:
        - name: cursor
          in: query
          description: "paging cursor"
          schema:
            type: string
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedPersonListResponse"
        default:
          $ref: "#/components/responses/Error"

  "/person-suggest":
    get:
      summary: "Search on person records"
      description: "Search on person records"
      operationId: "suggestPeople"
      parameters:
        - name: query
          in: query
          required: true
          description: "prefix to match person records on"
          schema:
            type: string
            minLength: 1
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedPersonListResponse"
        default:
          $ref: "#/components/responses/Error"

  "/person/{id}/orcid":
    put:
      summary: "Update person ORCID"
      description: "Update person ORCID"
      operationId: "setPersonOrcid"
      parameters:
        - name: id
          in: path
          required: true
          description: "person identifier"
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetPersonOrcidRequest"
        required: true
      responses:
        "200":
          description: "Success"
        default:
          $ref: "#/components/responses/Error"

  "/person/{id}/orcid-token":
    put:
      summary: "Update person ORCID token"
      description: "Update person ORCID token"
      operationId: "setPersonOrcidToken"
      parameters:
        - name: id
          in: path
          required: true
          description: "person identifier"
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetPersonOrcidTokenRequest"
        required: true
      responses:
        "200":
          description: "Success"
        default:
          $ref: "#/components/responses/Error"

  "/person/{id}/role":
    put:
      summary: "Update person role"
      description: "Update person role"
      operationId: "setPersonRole"
      parameters:
        - name: id
          in: path
          required: true
          description: "person identifier"
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetPersonRoleRequest"
        required: true
      responses:
        "200":
          description: "Success"
        default:
          $ref: "#/components/responses/Error"

  "/person/{id}/settings":
    put:
      summary: "Update person settings"
      description: "Update person settings"
      operationId: "setPersonSettings"
      parameters:
        - name: id
          in: path
          required: true
          description: "person identifier"
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetPersonSettingsRequest"
        required: true
      responses:
        "200":
          description: "Success"
        default:
          $ref: "#/components/responses/Error"

  "/organization/{id}":
    get:
      summary: "Get single organization record"
      description: "Get single organization record"
      operationId: "getOrganization"
      parameters:
        - name: id
          in: path
          description: "organization identifier"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Retrieve a single organization record successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        default:
          $ref: "#/components/responses/Error"

  "/organization":
    get:
      summary: "Get all organization records"
      description: "Get all organization records"
      operationId: "getOrganizations"
      parameters:
        - name: cursor
          in: query
          description: "offset for paging"
          schema:
            type: string
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedOrganizationListResponse"
        default:
          $ref: "#/components/responses/Error"

  "/organization-suggest":
    get:
      summary: "Search on organization records"
      description: "Search on organization records"
      operationId: "suggestOrganizations"
      parameters:
        - name: query
          in: query
          required: true
          description: "prefix to match organization records on"
          schema:
            type: string
            minLength: 1
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedOrganizationListResponse"
        default:
          $ref: "#/components/responses/Error"
  
security: []

components:

  responses:
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  schemas:
    PagedPersonListResponse:
      type: object
      required: [total]
      properties:
        cursor:
          type: string
        data:
          type: array
          items:
            $ref: "#/components/schemas/Person"

    # TODO: use json api attributes for linking to other pages
    PagedOrganizationListResponse:
      type: object
      required: [total]
      properties:
        cursor:
          type: string
        data:
          type: array
          items:
            $ref: "#/components/schemas/Organization"

    SetPersonOrcidRequest:
      type: object
      properties:
        orcid:
          type: string
      required: [orcid]

    SetPersonOrcidTokenRequest:
      type: object
      properties:
        orcid_token:
          type: string
      required: [orcid_token]

    SetPersonRoleRequest:
      type: object
      properties:
        role:
          type: array
          items:
            type: string
            minLength: 1
      required: [role]

    SetPersonSettingsRequest:
      type: object
      properties:
        settings:
          type: object
          additionalProperties:
            type: string
      required: [settings]

    Error:
      type: object
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
      required:
        - code
        - message

    IdRef:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
      required: [id, type]

    OrganizationRef:
      type: object
      properties:
        id:
          type: string
        date_created:
          type: string
          format: date-time
        date_updated:
          type: string
          format: date-time
        from:
          type: string
          format: date-time
        until:
          type: string
          format: date-time
      required: [id, date_created, date_updated, from]

    Organization:
      type: object
      properties:
        id:
          type: string
        gismo_id:
          type: string
        date_created:
          type: string
          format: date-time
        date_updated:
          type: string
          format: date-time
        type:
          type: string
        name_dut:
          type: string
        name_eng:
          type: string
        parent_id:
          type: string
        other_id:
          type: array
          items:
            $ref: "#/components/schemas/IdRef"
      required: [id, date_created, date_updated, type]

    Person:
      type: object
      required: [id, date_created, date_updated, active]
      properties:
        id:
          type: string
        gismo_id:
          type: string
        active:
          type: boolean
        date_created:
          type: string
          format: date-time
        date_updated:
          type: string
          format: date-time
        full_name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        orcid:
          type: string
        orcid_token:
          type: string
        preferred_first_name:
          type: string
        preferred_last_name:
          type: string
        birth_date:
          type: string
        title:
          type: string
        other_id:
          type: array
          items:
            $ref: "#/components/schemas/IdRef"
        organization:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationRef"
        job_category:
          type: array
          items:
            type: string
        role:
          type: array
          items:
            type: string
        settings:
          type: object
          additionalProperties:
            type: string
        object_class:
          type: array
          items:
            type: string
        expiration_date:
          type: string