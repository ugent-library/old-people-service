// Code generated by ent, DO NOT EDIT.

package organization

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/ugent-library/people-service/ent/schema"
)

const (
	// Label holds the string label denoting the organization type in the database.
	Label = "organization"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDateCreated holds the string denoting the date_created field in the database.
	FieldDateCreated = "date_created"
	// FieldDateUpdated holds the string denoting the date_updated field in the database.
	FieldDateUpdated = "date_updated"
	// FieldPublicID holds the string denoting the public_id field in the database.
	FieldPublicID = "public_id"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldAcronym holds the string denoting the acronym field in the database.
	FieldAcronym = "acronym"
	// FieldNameDut holds the string denoting the name_dut field in the database.
	FieldNameDut = "name_dut"
	// FieldNameEng holds the string denoting the name_eng field in the database.
	FieldNameEng = "name_eng"
	// FieldIdentifier holds the string denoting the identifier field in the database.
	FieldIdentifier = "identifier"
	// Table holds the table name of the organization in the database.
	Table = "organization"
)

// Columns holds all SQL columns for organization fields.
var Columns = []string{
	FieldID,
	FieldDateCreated,
	FieldDateUpdated,
	FieldPublicID,
	FieldType,
	FieldAcronym,
	FieldNameDut,
	FieldNameEng,
	FieldIdentifier,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultDateCreated holds the default value on creation for the "date_created" field.
	DefaultDateCreated func() time.Time
	// DefaultDateUpdated holds the default value on creation for the "date_updated" field.
	DefaultDateUpdated func() time.Time
	// UpdateDefaultDateUpdated holds the default value on update for the "date_updated" field.
	UpdateDefaultDateUpdated func() time.Time
	// DefaultPublicID holds the default value on creation for the "public_id" field.
	DefaultPublicID func() string
	// DefaultType holds the default value on creation for the "type" field.
	DefaultType string
	// DefaultIdentifier holds the default value on creation for the "identifier" field.
	DefaultIdentifier schema.TypeVals
)

// OrderOption defines the ordering options for the Organization queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByDateCreated orders the results by the date_created field.
func ByDateCreated(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDateCreated, opts...).ToFunc()
}

// ByDateUpdated orders the results by the date_updated field.
func ByDateUpdated(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDateUpdated, opts...).ToFunc()
}

// ByPublicID orders the results by the public_id field.
func ByPublicID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPublicID, opts...).ToFunc()
}

// ByType orders the results by the type field.
func ByType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldType, opts...).ToFunc()
}

// ByAcronym orders the results by the acronym field.
func ByAcronym(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAcronym, opts...).ToFunc()
}

// ByNameDut orders the results by the name_dut field.
func ByNameDut(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldNameDut, opts...).ToFunc()
}

// ByNameEng orders the results by the name_eng field.
func ByNameEng(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldNameEng, opts...).ToFunc()
}
