-- Enable extension unaccent and configure full text search
CREATE EXTENSION IF NOT EXISTS unaccent;
DO
$$BEGIN
	CREATE TEXT SEARCH CONFIGURATION usimple ( COPY = simple );
EXCEPTION
	WHEN unique_violation THEN
	   NULL;
END;$$;
ALTER TEXT SEARCH CONFIGURATION usimple ALTER MAPPING FOR hword, hword_part, word WITH unaccent, simple;

-- Create "organization" table
CREATE TABLE "organization" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "date_created" timestamptz NOT NULL, "date_updated" timestamptz NOT NULL, "public_id" character varying NOT NULL, "gismo_id" character varying NULL, "type" character varying NOT NULL DEFAULT 'organization', "name_dut" character varying NULL, "name_eng" character varying NULL, "other_id" jsonb NULL, "parent_id" bigint NULL, "ts" tsvector NULL GENERATED ALWAYS AS (((to_tsvector('simple'::regconfig, jsonb_path_query_array(other_id, '$.**{2}'::jsonpath)) || to_tsvector('simple'::regconfig, (public_id)::text)) || to_tsvector('usimple'::regconfig, (name_dut)::text)) || to_tsvector('usimple'::regconfig, (name_eng)::text)) STORED, PRIMARY KEY ("id"), CONSTRAINT "organization_organization_children" FOREIGN KEY ("parent_id") REFERENCES "organization" ("id") ON UPDATE NO ACTION ON DELETE SET NULL);
-- Create index "organization_gismo_id_key" to table: "organization"
CREATE UNIQUE INDEX "organization_gismo_id_key" ON "organization" ("gismo_id");
-- Create index "organization_parent_id" to table: "organization"
CREATE INDEX "organization_parent_id" ON "organization" ("parent_id");
-- Create index "organization_public_id_key" to table: "organization"
CREATE UNIQUE INDEX "organization_public_id_key" ON "organization" ("public_id");
-- Create index "organization_ts_idx" to table: "organization"
CREATE INDEX "organization_ts_idx" ON "organization" USING gin ("ts");
-- Create index "organization_type" to table: "organization"
CREATE INDEX "organization_type" ON "organization" ("type");
-- Create "person" table
CREATE TABLE "person" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "date_created" timestamptz NOT NULL, "date_updated" timestamptz NOT NULL, "public_id" character varying NOT NULL, "gismo_id" character varying NULL, "active" boolean NOT NULL DEFAULT false, "birth_date" character varying NULL, "email" character varying NULL, "other_id" jsonb NULL, "first_name" character varying NULL, "full_name" character varying NULL, "last_name" character varying NULL, "job_category" jsonb NULL, "orcid" character varying NULL, "orcid_token" character varying NULL, "preferred_first_name" character varying NULL, "preferred_last_name" character varying NULL, "title" character varying NULL, "role" jsonb NULL, "settings" jsonb NULL, "object_class" jsonb NULL, "expiration_date" character varying NULL, "ts" tsvector NULL GENERATED ALWAYS AS (to_tsvector('usimple'::regconfig, (full_name)::text)) STORED, PRIMARY KEY ("id"));
-- Create index "person_active" to table: "person"
CREATE INDEX "person_active" ON "person" ("active");
-- Create index "person_email" to table: "person"
CREATE INDEX "person_email" ON "person" ("email");
-- Create index "person_first_name" to table: "person"
CREATE INDEX "person_first_name" ON "person" ("first_name");
-- Create index "person_full_name" to table: "person"
CREATE INDEX "person_full_name" ON "person" ("full_name");
-- Create index "person_gismo_id_key" to table: "person"
CREATE UNIQUE INDEX "person_gismo_id_key" ON "person" ("gismo_id");
-- Create index "person_last_name" to table: "person"
CREATE INDEX "person_last_name" ON "person" ("last_name");
-- Create index "person_orcid" to table: "person"
CREATE INDEX "person_orcid" ON "person" ("orcid");
-- Create index "person_public_id_key" to table: "person"
CREATE UNIQUE INDEX "person_public_id_key" ON "person" ("public_id");
-- Create index "person_ts_idx" to table: "person"
CREATE INDEX "person_ts_idx" ON "person" USING gin ("ts");
-- Create "organization_person" table
CREATE TABLE "organization_person" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "date_created" timestamptz NOT NULL, "date_updated" timestamptz NOT NULL, "from" timestamptz NOT NULL, "until" timestamptz NOT NULL, "person_id" bigint NOT NULL, "organization_id" bigint NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "organization_person_organization_organizations" FOREIGN KEY ("organization_id") REFERENCES "organization" ("id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "organization_person_person_people" FOREIGN KEY ("person_id") REFERENCES "person" ("id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- Create index "organizationperson_person_id_organization_id" to table: "organization_person"
CREATE UNIQUE INDEX "organizationperson_person_id_organization_id" ON "organization_person" ("person_id", "organization_id");
