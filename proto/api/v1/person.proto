/* 
  $ go install github.com/bufbuild/buf/cmd/buf@latest
  $ go install github.com/fullstorydev/grpcurl/cmd/grpcurl@latest
  $ go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
  $ go install github.com/bufbuild/connect-go/cmd/protoc-gen-connect-go@latest
  $ buf generate
*/
syntax="proto3";

package api.v1;

option go_package = "github.com/ugent-library/person-service/api/v1";

import "google/protobuf/timestamp.proto";

message IdRef {
  string id = 1;
  string type = 2;
}

message OrganizationRef {
  string id = 1;
  google.protobuf.Timestamp date_created = 2;
  google.protobuf.Timestamp date_updated = 3;
  google.protobuf.Timestamp from = 4;
  google.protobuf.Timestamp until = 5;
}

message Person {
  string id = 1;
  string gismo_id = 2;
  bool active = 3;
  google.protobuf.Timestamp date_created = 4;
  google.protobuf.Timestamp date_updated = 5;
  string full_name = 6;
  string first_name = 7;
  string last_name = 8;
  string email = 9;
  string orcid = 10;
  string orcid_token = 11;
  string preferred_first_name = 12;
  string preferred_last_name = 13;
  string birth_date = 14;
  string title = 15;
  repeated IdRef other_id = 16;
  repeated OrganizationRef organization = 17;
  repeated string job_category = 18;
  repeated string role = 19;
  map<string,string> settings = 20;
  repeated string object_class = 21;
  string expiration_date = 22;
}

message Organization {
  string id = 1;
  string gismo_id = 2;
  google.protobuf.Timestamp date_created = 3;
  google.protobuf.Timestamp date_updated = 4;
  string type = 5;
  string name_dut = 6;
  string name_eng = 7;
  string parent_id = 8;
  repeated IdRef other_id = 9;
}

message GetPersonRequest {
  string id = 1;
}

message GetPersonResponse {
  Person person = 1;   
}

message GetAllPersonRequest {}

message GetAllPersonResponse{
  Person person = 1;
}

message SuggestPersonRequest{
  string query = 1;
}
message SuggestPersonResponse{
  repeated Person person = 1;
}

message GetOrganizationRequest {
  string id = 1;
}
message GetOrganizationResponse {
  Organization organization = 1;   
}

message GetAllOrganizationRequest {}
message GetAllOrganizationResponse {
  Organization organization = 1;
}

message SuggestOrganizationRequest{
  string query = 1;
}
message SuggestOrganizationResponse{
  repeated Organization organization = 1;
}

message SetPersonOrcidTokenRequest {
  string id = 1;
  string orcid_token = 2;
}
message SetPersonOrcidTokenResponse {
  string message = 1;
}

message SetPersonOrcidRequest {
  string id = 1;
  string orcid = 2;
}
message SetPersonOrcidResponse {
  string message = 1;
}

message SetPersonRoleRequest {
  string id = 1;
  repeated string role = 2;
}
message SetPersonRoleResponse {
  string message = 1;
}

message SetPersonSettingsRequest {
  string id = 1;
  map<string,string> settings = 2;
}
message SetPersonSettingsResponse {
  string message = 1;
}

service PersonService {
  rpc GetPerson(GetPersonRequest) returns (GetPersonResponse);
  rpc GetAllPerson(GetAllPersonRequest) returns (stream GetAllPersonResponse);
  rpc SuggestPerson(SuggestPersonRequest) returns (SuggestPersonResponse);
  rpc GetOrganization(GetOrganizationRequest) returns (GetOrganizationResponse);
  rpc GetAllOrganization(GetAllOrganizationRequest) returns (stream GetAllOrganizationResponse);
  rpc SuggestOrganization(SuggestOrganizationRequest) returns (SuggestOrganizationResponse);
  rpc SetPersonOrcidToken(SetPersonOrcidTokenRequest) returns (SetPersonOrcidTokenResponse);
  rpc SetPersonOrcid(SetPersonOrcidRequest) returns (SetPersonOrcidResponse);
  rpc SetPersonRole(SetPersonRoleRequest) returns (SetPersonRoleResponse);
  rpc SetPersonSettings(SetPersonSettingsRequest) returns (SetPersonSettingsResponse);
}